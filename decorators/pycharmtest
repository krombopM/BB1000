
'''
import math
import numpy as np

Integration function
n = number of gridpoints


def integrate_func(func, n):
    omg = (math.pi / n)
    sum = 0
    for i in range(n):
        x = math.cos(((2 * i) - 1) / (2 * n) * math.pi)
        f = func(x) * omg
        sum += f
    print('Int: ',sum)
    return sum

integrate_func(math.cos,1000)

#-------------------------------


def decorator(item):
    def color():
        return('a blue {}'.format(str(item())))
    return(color)

@decorator
def box():
    return('box of stuff')



print(box())



import math



def deco(func):
    def squaring(x):
        return(1 - (func(x) * func(x)))
    return(squaring)

@deco
def cos_func(x):
    ans = math.cos(x)
    return(ans)

print(cos_func(math.pi))

'''
import time

def timeme(method):
    def timed(*args, **kwargs):
        tstart = time.time()
        result = method(*args, **kwargs)
        tend = time.time()
        print('Elapsed time (s): ', tend - tstart)
        return result
    return timed

@timeme
def mk_list(n):
    list = []
    for i in range(n):
        list.append(1)
        time.sleep(0.5)

mk_list(4)






























